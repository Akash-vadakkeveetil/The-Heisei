<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Donor-available-volunteer-details</title>
  <link rel="stylesheet" href="donor.css">
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <style>
    /* Preloader styles */
  #preloader {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #2c195e; /* Dark background */
      display: none; /* Hidden by default */
      justify-content: center;
      align-items: center;
      z-index: 9999; /* Ensure it stays on top */
    }

    .loader {
      border: 6px solid #f3f3f3; /* Light border */
      border-top: 6px solid #4caf50; /* Spinner color */
      border-radius: 50%;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }
  </style>
</head>
<body>

<nav>
  <h1>HEISEI</h1>
 
  <div id="nav-part2">
    <a href="donorhome.html"><h3>Home</h3></a>
    <a href="donoravailablevol.html" class="active"><h3>Volunteers</h3></a>
    <a href="donorhistory.html"><h3>Donated</h3></a>
    <a href="login.html"><h3>LogOut</h3></a>
     <h2><%= username %> </h2>
  </div>
  <script>
    // Get the token from the URL
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get('token');
    // Update all hyperlinks dynamically
    document.querySelectorAll('a').forEach(link => {
        const href = link.getAttribute('href');
        if (href && token) {
            link.setAttribute('href', `${href}?token=${token}`);
        }
    });
  </script>
</nav>


  <div id="page1">

    <div id="preloader">
      <div class="loader"></div>
      Loading time depends on your Network Connectivity.
    </div>

<!-- Popup Box -->
<div id="popup" style="
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  width: 500px;
  height: 400px;
">
  <button id="close-popup" style="
    position: absolute;
    top: 0px;
    right: 0px;
    background: none;
    border: none;
    font-size: 20px;
    cursor: pointer;
  ">✖</button>
  <div id="map" style="width: 100%; height: 100%;"></div>
</div>

<div id="tooltip" style="
  position: absolute;
  display: none;
  background-color: rgb(242, 242, 242);
  color: rgb(0, 0, 0);
  padding: 5px 10px;
  border-radius: 5px;
  font-size: 12px;
  z-index: 1000;
  pointer-events: none;">
</div>

    <h1>Details of Available Volunteer</h1>
    <centre style="color: black;">__________________________________________________</centre>
    <h2 style="color: black;">Nearest to Farthest &darr;</h2>
    <centre style="color: black;">__________________________________________________</centre>
    <% if (donoravailablevolDetails && donoravailablevolDetails.length) { %>
      <% donoravailablevolDetails.forEach((item, index) => { %>
        <p style="color: black; font-size: 4vh;">Username: <%= item.username %></p>
        <p style="color: black; font-size: 4vh;">Name: <%= item.volname %></p>
        <p style="color: black; font-size: 4vh;">Contact Number: <%= item.contact %></p>
        <p style="font-size: 4vh; background-color: #ffffff; padding: 5px; color: blue; cursor: pointer; position: relative;" 
        onmouseover="showTooltip(event, 'Click to view map')" 
        onmouseout="hideTooltip()" onclick="fetchLocation('<%= item.username %>')">Location: <%= item.address %>, <%= item.pinno %></p>
        <button onclick="redirectToDonorRequest('<%= item.username %>')" 
          style="display: inline-flex; align-items: center; background-color: rgba(0, 0, 255, 0.934); color: white; padding: 4px 5px; border: none; border-radius: 5px; font-size: 16px; text-decoration: none; cursor: pointer;">
          Check Needs <span style="margin-left: 8px; font-size: 21px;">&#x2197;</span> 
        </button>
        <% if (index !== donoravailablevolDetails.length - 1) { %>
          <centre style="color: black;">__________________________________________________</centre>
        <% } %>
      <% }); %>
      
    <% } else { %>
      <p style="color: black;">No Volunteers Available.</p>
    <% } %>

    <br>
        <footer class="page-footer">
        <br><br><br><br><br><br>
    <p> </p>
    </footer>
        
    <script>
      function redirectToDonorRequest(username) {
        // Redirect to donorrequests.html with username as query parameter
        document.getElementById('preloader').style.display = 'flex';
        window.location.href = `donorrequests.html?token=${token}&username=${username}`;
      }
    </script>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

      <script>
        let map; // Global map variable
        async function fetchLocation(username) {
        try {
          // Send username to Node.js backend
          const response = await fetch(`/get-location?username=${username}`);
          const data = await response.json();
  
          if (data.latitude && data.longitude) {
            // Open the popup
            const popup = document.getElementById('popup');
            popup.style.display = 'block';
  
             // Remove existing map if already initialized
            if (map) {
                map.remove(); // Properly remove the previous instance
            }
            // Initialize the map
            map = L.map('map').setView([data.latitude, data.longitude], 14);

            // Add OpenStreetMap (OSM) tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            // Add a marker
            L.marker([data.latitude, data.longitude]).addTo(map)
                .bindPopup(`<b>${username}</b><br>(${data.latitude}, ${data.longitude})`)
                .openPopup();
          } else {
            alert('Failed to fetch location.');
          }
        } catch (error) {
          console.error('Error fetching location:', error);
          alert('An error occurred.');
        }
      }
  
      // Close popup functionality
      document.getElementById('close-popup').addEventListener('click', () => {
        document.getElementById('popup').style.display = 'none';
      });
  
      function showTooltip(event, message) {
        const tooltip = document.getElementById('tooltip');
        tooltip.style.display = 'block';
        tooltip.textContent = message;
        tooltip.style.left = `${event.pageX + 10}px`; // Position slightly to the right of the cursor
        tooltip.style.top = `${event.pageY + 10}px`;  // Position slightly below the cursor
      }
  
      function hideTooltip() {
        const tooltip = document.getElementById('tooltip');
        tooltip.style.display = 'none';
      }
  
  
      </script> 

</div>

</body>
</html>
